import{M as a}from"./chunks/ModelSelector.DK3fzM1Q.js";import{c as n,o as t,af as i,J as l}from"./chunks/framework.CuQK53I8.js";const k=JSON.parse('{"title":"Coding","description":"","frontmatter":{"title":"Coding"},"headers":[],"relativePath":"recommendations/coding/index.md","filePath":"recommendations/coding/index.md"}'),r={name:"recommendations/coding/index.md"},g=Object.assign(r,{setup(o){const e=[{ramMin:64,vramMin:16,models:[{"Qwen3 Coder 30B A3B Instruct":{parameters:30,quantization:"BF16"}}],usefulness:1},{ramMin:64,vramMin:12,models:[{"Qwen3 Coder 30B A3B Instruct":{parameters:30,quantization:"Q8_K_XL"}}],usefulness:.7},{ramMin:32,vramMin:16,models:[{"Qwen3 Coder 30B A3B Instruct":{parameters:30,quantization:"Q8_K_XL"}}],usefulness:.7},{ramMin:32,vramMin:6,models:[{"Qwen3 Coder 30B A3B Instruct":{parameters:30,quantization:"Q6_K_XL"}}],usefulness:.5},{ramMin:16,vramMin:4,models:[{"Qwen3 4B Instruct 2507":{parameters:4,quantization:"F16"}}],usefulness:.3},{ramMin:16,vramMin:0,models:[{"Qwen3 4B Instruct 2507":{parameters:4,quantization:"Q4_K_XL"}}],usefulness:0}];return(h,s)=>(t(),n("div",null,[s[0]||(s[0]=i('<h1 id="coding-recommendations" tabindex="-1">Coding Recommendations <a class="header-anchor" href="#coding-recommendations" aria-label="Permalink to “Coding Recommendations”">​</a></h1><p><strong>Prioritizing Very High Precision in Code Generation and Debugging</strong></p><p>When working with AI-assisted coding, <strong>precision is non-negotiable</strong>. Even minor hallucinations, syntactic errors, or incorrect logic can introduce bugs, security vulnerabilities, or maintenance debt. These recommendations are tailored for developers who require <strong>extremely high-fidelity outputs</strong>—not just plausible-looking code, but <strong>correct, production-ready, and logically sound</strong> implementations.</p><p>Use the selector below to identify the best model for a given hardware configuration:</p>',4)),l(a,{modelDefinitions:e}),s[1]||(s[1]=i(`<h1 id="prompting" tabindex="-1">Prompting <a class="header-anchor" href="#prompting" aria-label="Permalink to “Prompting”">​</a></h1><p>To effectively prompt coding models in a chat-based interface, consider the following guidelines:</p><ol><li><strong>State your goal clearly.</strong> Provide context for your request. An authoritative tone often yields better results.</li><li><strong>Use code blocks.</strong> Enclose any code, error messages, data structures, or formatting examples within markdown code blocks for clarity.</li><li><strong>Provide examples.</strong> Include relevant code snippets or data samples to illustrate your request.</li></ol><p>Below are some examples of well-structured prompts, followed by examples of what to avoid.</p><h2 id="effective-examples" tabindex="-1">Effective Examples <a class="header-anchor" href="#effective-examples" aria-label="Permalink to “Effective Examples”">​</a></h2><h3 id="generating-a-function" tabindex="-1">Generating a Function <a class="header-anchor" href="#generating-a-function" aria-label="Permalink to “Generating a Function”">​</a></h3><p>This prompt clearly defines the input data structure and the desired outcome.</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Write a JavaScript function that generates a descriptive sentence about a person, given an input object with the following structure:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`\`\`ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;dead&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;alive&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">The function should return a grammatically correct sentence.</span></span></code></pre></div><h3 id="requesting-debugging-help" tabindex="-1">Requesting Debugging Help <a class="header-anchor" href="#requesting-debugging-help" aria-label="Permalink to “Requesting Debugging Help”">​</a></h3><p>This prompt provides both the error and the code that produced it, creating a complete context for the model.</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">I have encountered this error:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`\`\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Error: Cannot divide by zero</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">In the following JavaScript code:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`\`\`js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> divide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Cannot divide by zero&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Can you help me refactor the error handling to be more user-friendly?</span></span></code></pre></div><h2 id="poor-examples-what-to-avoid" tabindex="-1">Poor Examples (What to Avoid) <a class="header-anchor" href="#poor-examples-what-to-avoid" aria-label="Permalink to “Poor Examples (What to Avoid)”">​</a></h2><p>The following prompts are less effective because they lack necessary context, formatting, and clarity, forcing the model to guess.</p><h3 id="vague-function-request" tabindex="-1">Vague Function Request <a class="header-anchor" href="#vague-function-request" aria-label="Permalink to “Vague Function Request”">​</a></h3><p>This prompt lacks structure and mixes the data description with the instruction.</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">make a js function. it takes a person with a name, age, and status (dead or alive) and it should make a sentence about them.</span></span></code></pre></div><p><strong>Why it&#39;s ineffective:</strong></p><ul><li><strong>No Code Formatting:</strong> The description of the <code>Person</code> object is not in a code block, making it harder to parse.</li><li><strong>Ambiguous:</strong> The request &quot;make a sentence&quot; is vague and leaves too much room for interpretation.</li><li><strong>Lacks Authority:</strong> The tone is casual and less direct, which can sometimes lead to less precise results.</li></ul><h3 id="incomplete-debugging-request" tabindex="-1">Incomplete Debugging Request <a class="header-anchor" href="#incomplete-debugging-request" aria-label="Permalink to “Incomplete Debugging Request”">​</a></h3><p>This prompt mentions an error but provides no code, making it impossible to solve.</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">My code is broken. It gives me a &quot;cannot divide by zero&quot; error. How do I fix my code?</span></span></code></pre></div><p><strong>Why it&#39;s ineffective:</strong></p><ul><li><strong>No Code Context:</strong> Without the relevant code, the model cannot identify the source of the error.</li><li><strong>No Error Formatting:</strong> The error message is not placed in a code block, blending in with the rest of the text.</li><li><strong>Too Broad:</strong> &quot;How do I fix my code?&quot; is an unanswerable question without seeing the code in question.</li></ul>`,23))]))}});export{k as __pageData,g as default};
